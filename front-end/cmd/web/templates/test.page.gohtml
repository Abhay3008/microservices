{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <a id="brokerapi" class="btn btn-outline-secondary" href="javascript:void(0);"> Test Broker api</a>
                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        let brokerbtn = document.getElementById("brokerapi")
        let output = document.getElementById("output")
        let result = document.getElementById("payload")
        let recieved = document.getElementById("received")
        brokerbtn.addEventListener("click", function(){
            const body = {
                method: 'POST',
            }
            fetch("http:\/\/localhost:3000",body)
            .then((response) => response.json())
            .then((data) => {
                result.innerHTML = "empty request"
                recieved.innerHTML = JSON.stringify(data, undefined, 4);
                if (data.error) {
                    console.log("cannon fetch data")
                }
                else{
                    output.innerHTML += `<br> The response from broker-api: ${data.message}`;
                }
            })
            .catch((error) => {
            output.innerHTML += `<br> error: ${error}`
        })
        })
        
    </script>
{{end}}
